"""Initial models

Revision ID: 4d95a2959950
Revises: None
Create Date: 2015-12-05 11:54:24.066332

"""

# revision identifiers, used by Alembic.
revision = '4d95a2959950'
down_revision = None

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organization',
    sa.Column('created_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('updated_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('name', sa.UnicodeText(), nullable=False),
    sa.Column('slug', sa.Unicode(length=255), nullable=False),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('website', sa.UnicodeText(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_organization_created_at'), 'organization', ['created_at'], unique=False)
    op.create_index(op.f('ix_organization_updated_at'), 'organization', ['updated_at'], unique=False)
    op.create_table('user',
    sa.Column('created_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('updated_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.Unicode(length=255), nullable=False),
    sa.Column('username_slug', sa.Unicode(length=255), nullable=False),
    sa.Column('email', sa.Unicode(length=255), nullable=False),
    sa.Column('password', sa.Unicode(length=1024), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_created_at'), 'user', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=False)
    op.create_index(op.f('ix_user_updated_at'), 'user', ['updated_at'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_index(op.f('ix_user_username_slug'), 'user', ['username_slug'], unique=True)
    op.create_table('api_key',
    sa.Column('created_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('updated_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('key', sa.String(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('expires_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=False),
    sa.Column('used_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_index(op.f('ix_api_key_created_at'), 'api_key', ['created_at'], unique=False)
    op.create_index(op.f('ix_api_key_expires_at'), 'api_key', ['expires_at'], unique=False)
    op.create_index(op.f('ix_api_key_updated_at'), 'api_key', ['updated_at'], unique=False)
    op.create_index(op.f('ix_api_key_used_at'), 'api_key', ['used_at'], unique=False)
    op.create_index(op.f('ix_api_key_user_id'), 'api_key', ['user_id'], unique=False)
    op.create_table('event',
    sa.Column('created_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('updated_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('name', sa.UnicodeText(), nullable=False),
    sa.Column('slug', sa.Unicode(length=255), nullable=False),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('organization_id', sa.BigInteger(), nullable=False),
    sa.Column('inherit_description', sa.Boolean(), nullable=False),
    sa.Column('website', sa.UnicodeText(), nullable=True),
    sa.Column('inherit_website', sa.Boolean(), nullable=False),
    sa.Column('starts_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('ends_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('all_day', sa.Boolean(), nullable=False),
    sa.Column('published_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_event_created_at'), 'event', ['created_at'], unique=False)
    op.create_index(op.f('ix_event_ends_at'), 'event', ['ends_at'], unique=False)
    op.create_index(op.f('ix_event_organization_id'), 'event', ['organization_id'], unique=False)
    op.create_index(op.f('ix_event_published_at'), 'event', ['published_at'], unique=False)
    op.create_index(op.f('ix_event_starts_at'), 'event', ['starts_at'], unique=False)
    op.create_index(op.f('ix_event_updated_at'), 'event', ['updated_at'], unique=False)
    op.create_table('presenter',
    sa.Column('created_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('updated_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('name', sa.UnicodeText(), nullable=False),
    sa.Column('slug', sa.Unicode(length=255), nullable=False),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('organization_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_presenter_created_at'), 'presenter', ['created_at'], unique=False)
    op.create_index(op.f('ix_presenter_organization_id'), 'presenter', ['organization_id'], unique=False)
    op.create_index(op.f('ix_presenter_updated_at'), 'presenter', ['updated_at'], unique=False)
    op.create_index(op.f('ix_presenter_user_id'), 'presenter', ['user_id'], unique=False)
    op.create_table('panel',
    sa.Column('created_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('updated_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('name', sa.UnicodeText(), nullable=False),
    sa.Column('slug', sa.Unicode(length=255), nullable=False),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('presenter_id', sa.BigInteger(), nullable=True),
    sa.Column('starts_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=False),
    sa.Column('ends_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=False),
    sa.Column('tentative', sa.Boolean(), nullable=False),
    sa.Column('published_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
    sa.Column('cancelled', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['presenter_id'], ['presenter.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_panel_created_at'), 'panel', ['created_at'], unique=False)
    op.create_index(op.f('ix_panel_ends_at'), 'panel', ['ends_at'], unique=False)
    op.create_index(op.f('ix_panel_event_id'), 'panel', ['event_id'], unique=False)
    op.create_index(op.f('ix_panel_presenter_id'), 'panel', ['presenter_id'], unique=False)
    op.create_index(op.f('ix_panel_published_at'), 'panel', ['published_at'], unique=False)
    op.create_index(op.f('ix_panel_starts_at'), 'panel', ['starts_at'], unique=False)
    op.create_index(op.f('ix_panel_updated_at'), 'panel', ['updated_at'], unique=False)
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_panel_updated_at'), table_name='panel')
    op.drop_index(op.f('ix_panel_starts_at'), table_name='panel')
    op.drop_index(op.f('ix_panel_published_at'), table_name='panel')
    op.drop_index(op.f('ix_panel_presenter_id'), table_name='panel')
    op.drop_index(op.f('ix_panel_event_id'), table_name='panel')
    op.drop_index(op.f('ix_panel_ends_at'), table_name='panel')
    op.drop_index(op.f('ix_panel_created_at'), table_name='panel')
    op.drop_table('panel')
    op.drop_index(op.f('ix_presenter_user_id'), table_name='presenter')
    op.drop_index(op.f('ix_presenter_updated_at'), table_name='presenter')
    op.drop_index(op.f('ix_presenter_organization_id'), table_name='presenter')
    op.drop_index(op.f('ix_presenter_created_at'), table_name='presenter')
    op.drop_table('presenter')
    op.drop_index(op.f('ix_event_updated_at'), table_name='event')
    op.drop_index(op.f('ix_event_starts_at'), table_name='event')
    op.drop_index(op.f('ix_event_published_at'), table_name='event')
    op.drop_index(op.f('ix_event_organization_id'), table_name='event')
    op.drop_index(op.f('ix_event_ends_at'), table_name='event')
    op.drop_index(op.f('ix_event_created_at'), table_name='event')
    op.drop_table('event')
    op.drop_index(op.f('ix_api_key_user_id'), table_name='api_key')
    op.drop_index(op.f('ix_api_key_used_at'), table_name='api_key')
    op.drop_index(op.f('ix_api_key_updated_at'), table_name='api_key')
    op.drop_index(op.f('ix_api_key_expires_at'), table_name='api_key')
    op.drop_index(op.f('ix_api_key_created_at'), table_name='api_key')
    op.drop_table('api_key')
    op.drop_index(op.f('ix_user_username_slug'), table_name='user')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_updated_at'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_index(op.f('ix_user_created_at'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_organization_updated_at'), table_name='organization')
    op.drop_index(op.f('ix_organization_created_at'), table_name='organization')
    op.drop_table('organization')
    ### end Alembic commands ###
